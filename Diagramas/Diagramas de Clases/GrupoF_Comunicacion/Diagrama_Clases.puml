@startuml
' Encapsulaci√≥n
skinparam classAttributeIconSize 0

class Usuario {
    - idUsuario: int
    - nombre: String
    - email: String
    + recibirMensaje(mensaje: Mensaje)
}

class Administrador {
    + generarReporteMensaje(reporte: Reporte)
    + modificarAnuncioGeneral(anuncio: AnuncioGeneral)
    + eliminarAnuncioGeneral(id: int)
    + generarAnuncioGeneral(anuncio: AnuncioGeneral)
    + enviarComunicadoEmpleados(comunicado: Comunicado)
}

class Empleado {
    
}

class Residente {
}

class ReporteMensaje {
    - idReporte: int
    - contenido: String
    - fechaCreacion: datetime
    + generarReporte(): void
    + visualizarReporte(): void
}


class Comunicado {
    - empleados: List[Empleado]
}

class Mensaje{
    - idMensaje: int
    - contenido: String
    - destinatarios: List[Usuario]
    - fechaEnvio: datetime
    + enviar(): void
}

class AnuncioGeneral{
    - idAnuncio: int
    - contenido: String
    - fechaCreacion: datetime
    + generar(): void
    + editar(nuevoContenido: String): void
    + eliminar(): void
}


Usuario <|-- Empleado
Usuario <|-- Administrador
Usuario <|-- Residente

Administrador "1" --> "0..*" Comunicado: "enviar"
Administrador "1"--> "0..*" ReporteMensaje: "genera"
Administrador "1" --> "1..*" AnuncioGeneral: "gestiona"

Comunicado "1" --> "1..*" Empleado: "dirigido a"
Usuario "1" --> "0..*" Mensaje: "recibe"

Mensaje <|-- Comunicado

@enduml
