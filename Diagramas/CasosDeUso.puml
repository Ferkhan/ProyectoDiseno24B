@startuml
left to right direction

' Actores principales
actor "Administrador" as Admin
actor "Limpieza" as Limpieza
actor "Residente" as Departamento
actor "Mantenimiento" as Mantenimiento
actor "Empleado" as Empleado
actor "Usuario"
actor "Guardia" as Guardia

' Jerarquía de usuarios
Usuario <|-- Empleado
Usuario <|-- Admin
Usuario <|-- Departamento
Empleado <|-- Limpieza
Empleado <|-- Mantenimiento
Empleado <|-- Guardia

' Gestión de pagos y multas
package "Pagos y Finanzas"{



usecase "Realizar un pago" as UC1
package "Métodos de Pago" {
usecase "Pago en efectivo" as UC1_1
usecase "Pago por transferencia bancaria" as UC1_2
usecase "Pago por depósito bancario" as UC1_3
usecase "Pago a cuotas" as UC1_4
}
usecase "Consultar el historial de pagos y multas" as UC2
usecase "Recibir recordatorios y notificaciones" as UC3


usecase "Registrar un pago" as UC4
usecase "Editar registro de pago" as UC4_5
usecase "Registrar una multa" as UC5
usecase "Consultar el historial de pagos y multas" as UC6
usecase "Enviar recordatorios y notificaciones" as UC7
usecase "Configurar métodos de pago" as UC8
}


Departamento --> UC1
UC1 <|-- UC1_1
UC1 <|-- UC1_2
UC1 <|-- UC1_3
UC1 <|-- UC1_4


Departamento --> UC2
Departamento --> UC3

Admin --> UC4
Admin--> UC4_5
Admin --> UC5

Admin --> UC6
Admin --> UC7
Admin --> UC8

' Gestión de usuarios y administradores
package "Gestión de Usuarios" {
    usecase "Iniciar sesión" as IniciarSesion
    usecase "Verificación 2FA" as Verificacion2FA
    usecase "Recuperar contraseña" as RecuperarContraseña
    usecase "Gestionar cuenta" as GestionarCuenta
    usecase "Crear cuenta" as CrearCuenta
    usecase "Actualizar cuenta" as ActualizarCuenta
    usecase "Desactivar cuenta" as DesactivarCuenta
}

Admin --> GestionarCuenta
Usuario --> IniciarSesion
Departamento --> GestionarCuenta

GestionarCuenta <|-- CrearCuenta
GestionarCuenta <|-- ActualizarCuenta
GestionarCuenta <|-- DesactivarCuenta
GestionarCuenta ..> Verificacion2FA : <<include>>
IniciarSesion ..> Verificacion2FA : <<include>>
IniciarSesion <. RecuperarContraseña : <<extend>>

' Check-in
package "Check-in" {
    usecase "Registrar Entrada" as RegistrarEntrada
    usecase "Recopilar Detalles del Visitante" as RecopilarDetalles
    usecase "Notificar Llegada Programada" as NotificarLlegada
    usecase "Mantener Registro Histórico" as MantenerRegistro
    usecase "Enviar Alerta Rápida" as EnviarAlerta
    usecase "Coordinar Parqueadero de Visita" as CoordinarParqueadero
    usecase "Autorizar Entrada" as AutorizarEntrada
}

RegistrarEntrada <.. RecopilarDetalles : <<extend>>
RegistrarEntrada <.. NotificarLlegada : <<extend>>
RegistrarEntrada <.. MantenerRegistro : <<extend>>
RegistrarEntrada <.. AutorizarEntrada : <<include>>

CoordinarParqueadero <.. AutorizarEntrada : <<include>>

Guardia --> RegistrarEntrada
Guardia --> EnviarAlerta
Guardia --> CoordinarParqueadero

Departamento --> CoordinarParqueadero

' Reservas de Espacios Comunes
package "Reserva de Espacios Comunes" {
    usecase "Visualizar disponibilidad" as VisualizarDisp
    usecase "Reservar áreas comunes" as ReservarAC
    usecase "Cancelar reserva" as CancelReserva
}

Departamento --> VisualizarDisp
Departamento --> ReservarAC
Departamento --> CancelReserva
ReservarAC <.. CoordinarParqueadero : <<include>>

' Comunicación
package "Comunicación" {
    package "Envío de Mensajes" {
        usecase "Enviar Mensaje Global" as MensajeGlobal
        usecase "Enviar Mensaje Directo" as MensajeDirecto
    }
    package "Comunicados" {
        usecase "Enviar Comunicados Trabajadores" as ComunicadoTrabajadores
    }
    package "Anuncio General" {
        usecase "Modificar Anuncio General" as ModAnuncioGeneral
        usecase "Eliminar Anuncio General" as DelAnuncioGeneral
        usecase "Agregar Anuncio General" as AddAnuncioGeneral
    }
    package "Reportes" {
        usecase "Crear Reporte" as CreaReporte
    }
}
package Inmuebles{
usecase "Registrar inmuebles" as RegisterProperty
usecase "Actualizar información de inmuebles" as UpdateProperty
usecase "Consultar disponibilidad de inmuebles" as CheckAvailability
usecase "Administrar estado de inmuebles" as ManageStatus
usecase "Gestionar áreas comunes" as ManageCommonAreas
usecase "Gestionar reservas de áreas comunes" as ManageReservations
usecase "Registrar usuarios del condominio" as RegisterUsers
usecase "Consultar datos de propietarios o residentes" as ViewUsers
usecase "Gestionar acceso al sistema" as ManageAccess
usecase "Registrar solicitudes de mantenimiento" as MaintenanceRequest
usecase "Asignar tareas de mantenimiento" as AssignTasks
usecase "Monitorear estado del mantenimiento" as MonitorMaintenance
usecase "Configurar alertas y recordatorios" as ConfigureAlerts
usecase "Notificar eventos fortuitos" as NotifyEvents
usecase "Generar reportes de estado del condominio" as GenerateReports
usecase "Gestionar pagos y cuotas" as ManagePayments
usecase "Emitir recibos y facturas" as GenerateReceipts

Admin -r-> RegisterProperty
Admin -r-> UpdateProperty
Admin -d-> CheckAvailability
Admin -d-> ManageStatus
Admin -l-> ManageCommonAreas
Admin -d-> RegisterUsers
Admin -d-> ViewUsers
Admin -r-> ManageAccess
Admin -d-> AssignTasks
Admin -d-> MonitorMaintenance
Admin -r-> ConfigureAlerts
Admin -r-> NotifyEvents
Admin -l-> GenerateReports
Admin -d-> ManagePayments
Admin -d-> GenerateReceipts

Departamento -l-> MaintenanceRequest
Departamento -r-> ManageReservations

Mantenimiento -u-> AssignTasks
Mantenimiento -d-> MonitorMaintenance
}



Admin --> ComunicadoTrabajadores
Admin --> MensajeGlobal
Admin --> MensajeDirecto

AddAnuncioGeneral --> ModAnuncioGeneral
AddAnuncioGeneral --> DelAnuncioGeneral
Admin --> AddAnuncioGeneral

Departamento --> ComunicadoTrabajadores
Admin --> CreaReporte

MensajeGlobal <.. EnviarAlerta : <<include>>
@enduml